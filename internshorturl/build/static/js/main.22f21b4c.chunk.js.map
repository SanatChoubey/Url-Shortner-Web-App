{"version":3,"sources":["components/header.js","config.js","App.js","components/Signup.js","serviceWorker.js","components/shortner.js","index.js"],"names":["Title","styled","h2","Header","Icon","name","color","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebase","ErrorPara","p","initialState","email","password","error","App","props","useEffect","onAuthStateChanged","user","history","push","useReducer","prevState","nextState","state","updateState","HandleChange","event","target","value","className","size","Card","style","width","padding","Form","Field","onChange","placeholder","type","Button","onClick","signInWithEmailAndPassword","catch","errorCode","code","primary","href","SignUp","createUserWithEmailAndPassword","then","res","console","log","Boolean","window","location","hostname","match","MainDiv","div","Shortner","ref","uid","on","snapshot","val","list","Object","values","setListdata","useState","linkid","setLinkid","listdata","newlink","setNewLink","bool","setBool","display","flexDirection","margin","styel","Input","icon","iconPosition","UrlLink","marginTop","axios","post","data","shortLink","currentUser","uuid","set","sizeUnit","loading","fontSize","fontWeight","marginBottom","map","item","ListOfUrls","ReactDOM","render","exact","path","component","Signup","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.22f21b4c.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components'\nimport {Icon} from 'semantic-ui-react'\nconst Title = styled.h2`\n width:100%;\n height:30px;\n font-family: 'Roboto Mono', monospace;\n padding-left:10px;\n color: #10ac84;\n\n`\nconst Header =() =>{\n     return(\n          <Title>\n              URL Shortner \n              <Icon name = 'linkify'color=\"green\"/>\n          </Title>     \n     )\n}\nexport default Header;\n","\nvar firebaseConfig = {\n     apiKey: \"AIzaSyBUEUf3duy-6adfRG5IZltXxLZVYpekHkU\",\n     authDomain: \"snapcool-38312.firebaseapp.com\",\n     databaseURL: \"https://snapcool-38312.firebaseio.com\",\n     projectId: \"snapcool-38312\",\n     storageBucket: \"snapcool-38312.appspot.com\",\n     messagingSenderId: \"941727604271\",\n     appId: \"1:941727604271:web:f4af417506d404e7a170da\"\n   };\n export  default firebaseConfig\n","import React ,{useReducer,useEffect}from 'react';\nimport styled from 'styled-components'\nimport { Button,Form ,Card, Icon} from 'semantic-ui-react'\nimport * as firebase from 'firebase';\nimport './App.css';\nimport firebaseConfig from './config'\nfirebase.initializeApp(firebaseConfig);\nconst ErrorPara = styled.p`\n  color: red;\n`\nconst initialState ={\n  email:'',\n  password:'',\n  error:''\n}\nfunction App(props) { \n  useEffect(()=>{\n    firebase.auth().onAuthStateChanged(function(user) {\n      if (user) {\n        props.history.push('/shortner')\n      } else {\n        props.push('/shortner')\n      }\n    });\n  },[])\n  const updateReducer = (prevState={},nextState={})=>{return({...prevState,...nextState})}\n  const [state,updateState]= useReducer(updateReducer,initialState);\n  const HandleSubmit =()=> { \n    \n    firebase.auth().signInWithEmailAndPassword(state.email, state.password).catch(function(error) {\n      var errorCode = error.code;\n      state[\"error\"] = errorCode\n      updateState({\n        ...state\n      })\n    });\n    \n  }\n  const HandleChange = (event)=>{\n    const { name, value } = event.target\n    state[name]= value\n    updateState({\n     ...state\n    })\n    \n  }\n  return (\n    <div className=\"App\">\n      <Icon  size='massive' color =\"blue\"name='lock' />\n      <h3><b>Login </b></h3>\n      <Card style={{width:'450px',padding:\"5px\"}}>\n      <Form>\n        <Form.Field>\n          <label>Email Id</label>\n          <input name = 'email' onChange={HandleChange}placeholder='Email Id' />\n        </Form.Field>\n        <Form.Field>\n          <label>Password</label>\n          <input type = \"password\" onChange={HandleChange} name = 'password'\n          placeholder='Password' />\n        </Form.Field>\n        <ErrorPara>{state.error}</ErrorPara>\n        <Button onClick={HandleSubmit} primary >Login </Button>\n      </Form>\n      </Card>\n      <p>Not registered ?<a href=\"/signup\">Signup</a></p>\n    </div>\n  );\n}\n\nexport default App;\n","import React, { useReducer,useEffect }from 'react';\nimport * as firebase from 'firebase';\nimport styled from 'styled-components'\nimport '../App.css'\nimport { Button, Form ,Card, Icon} from 'semantic-ui-react'\n\n\nconst ErrorPara = styled.p`\n  color: red;\n`\nconst initialState ={\n  email:'',\n  password:'',\n  error:''\n}\nconst SignUp = (props)=>{\n     useEffect(()=>{\n          firebase.auth().onAuthStateChanged(function(user) {\n            if (user) {\n              props.history.push('/shortner')\n            } else {\n              props.push('/shortner')\n            }\n          });\n        },[])\n     const updateReducer = (prevState={},nextState={})=>{return({...prevState,...nextState})}\n     const [state,updateState]= useReducer(updateReducer,initialState);\n     const HandleSubmit =()=> { \n          firebase.auth().createUserWithEmailAndPassword(state.email, state.password).then((res)=>{\n               console.log(res)\n          }).catch(function(error) {\n            var errorCode = error.code;\n            state[\"error\"] = errorCode\n            updateState({\n              ...state\n            })\n          });\n     }\n     const HandleChange = (event)=>{\n          const { name, value } = event.target\n          state[name]= value\n          updateState({\n               ...state\n          })\n          \n     }     \n      return (\n          <div className=\"App\">\n            <Icon  size='massive' color =\"blue\"name='lock' />\n            <h3><b>SignUp </b></h3>\n            <Card style={{width:'450px',padding:\"5px\"}}>\n            <Form>\n              <Form.Field>\n                <label>Email Id</label>\n                <input onChange={HandleChange} name = 'email' placeholder='Email Id' />\n              </Form.Field>\n              <Form.Field>\n                <label>Password</label>\n                <input onChange={HandleChange} type = \"password\" \n                name = 'password' placeholder='Password' />\n              </Form.Field>\n              <ErrorPara>{state.error}</ErrorPara>\n              <Button primary onClick={HandleSubmit}> SignUp </Button>\n            </Form>\n            </Card>\n            <p>registered ?<a href=\"/\">Login</a></p>\n          </div>\n        );\n}\nexport default  SignUp","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React ,{useState,useEffect}from 'react';\nimport styled from 'styled-components';\nimport * as firebase from 'firebase';\nimport uuid from 'uuid/v4'\nimport axios from 'axios';\nimport {Input, Button,Card } from 'semantic-ui-react'\nimport { BeatLoader } from 'react-spinners';\n\nconst MainDiv = styled.div`\n     display: flex;\n     justify-content:space-between;\n     align-items:flex-start;\n     width:100vw;\n     height:100vh;\n     background-color:#ecf0f1;   \n     \n`\n\n\nconst Shortner= (props)=>{\n    \n     useEffect(()=>{\n          \n\n          firebase.auth().onAuthStateChanged(function(user) {\n            if (user) {\n               \n               firebase.database().ref('Urls/' + user.uid).on('value',(snapshot)=>{\n                    console.log(snapshot.val());\n                    const list = Object.values(snapshot.val());\n                    setListdata(list);\n               })\n            }else{\n               props.push('/')\n            } \n          });\n          \n         \n        },[])\n     const [linkid,setLinkid] = useState('');\n     const [errorlink,setErrorlink] = useState('')\n     const [listdata , setListdata] = useState('')\n     const [newlink,setNewLink] = useState('')\n     const [bool,setBool] = useState(false)\n     const ListOfUrls =()=>{\n          // listdata\n         if(listdata){ \n              console.log('hello',listdata)\n              return (listdata.map((item)=>{\n               return(\n                    <Card style={{width:'500px'}}>\n                         <div style={{color:'black'}}>\n                              <b>Long Url -</b> {item.UrlLink}\n                         </div>\n                         <div style={{color:'black'}}>\n                         <b>Short Url -</b> {item.shortLink}\n                         </div>\n                    </Card>\n               )\n               }\n               ))\n          }\n     }\n     const handleClick = ()=>{\n          setBool(true)\n          console.log(linkid)\n          axios.post(`https://firebasedynamiclinks.googleapis.com/v1/shortLinks?key=${'AIzaSyBUEUf3duy-6adfRG5IZltXxLZVYpekHkU'}`,{\n               \"longDynamicLink\": `https://snapcool.page.link/?link=${linkid}/&apn=com.example.android`\n          }).then((res)=>{\n               setNewLink(res.data.shortLink)\n               setBool(false)\n               var user = firebase.auth().currentUser;\n               const DbSend= firebase.database().ref('Urls/' + user.uid+'/'+uuid());\n               DbSend.set({\n                    UrlLink:linkid,\n                    shortLink:res.data.shortLink\n               })\n\n          }).catch(()=>{\n               setBool(false)\n          })\n     }\n     const HandleChangeEvent = (event)=>{\n          const UrlLink= event.target.value\n          setLinkid(UrlLink)\n          \n     }\n     return (\n          <MainDiv>\n               <div style={{display:\"flex\",flexDirection:'column',margin:'50px',width:'40%'}}>\n               <div styel={{color:\"black\"}}>Enter Url to short (Example - https://medium.com/@choudlet/how-to-combine-graphql-type-definitions-quickly-and-easily-with-apollo-server-c96c4d9a7ea1)</div>\n               <Input icon=\"linkify\" iconPosition=\"left\" \n               onChange={HandleChangeEvent}\n               style={{width:'500px'}}\n               placeholder='Enter Url ' />\n               <Button color='green' \n               style={{marginTop:'5px',width:'150px'}}\n               onClick={handleClick}>\n                 {  bool? <BeatLoader\n                         sizeUnit={\"px\"}\n                         size={10}\n                         color={'#123abc'}\n                         loading={true}\n                    />:\"Get short Url\"}\n               </Button>\n               <div style={{color:'black'}}> Short Url -<b><a href={newlink}>{newlink}</a></b></div>\n               </div>\n               <div style={{ margin:'50px'}}>\n                    <div style={{color:'black',width:'700px',fontSize:'30px',fontWeight:500,marginBottom:'10px'}}>List of Short Urls</div>\n               {\n                    ListOfUrls()\n               }\n               </div>\n          </MainDiv>\n     )\n}\nexport default Shortner","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router, Route, } from 'react-router-dom';\nimport './index.css';\nimport Header from './components/header'\nimport App from './App';\nimport Signup from './components/Signup'\nimport * as serviceWorker from './serviceWorker';\nimport Shortner from './components/shortner'\nReactDOM.render(\n<Router>\n     <div>\n          <Header/>\n          <Route exact path='/' component={App}/> \n          <Route exact path = '/signup'component={Signup}/> \n          <Route exact path = '/shortner' component={Shortner}/>\n     </div>   \n     \n</Router>     \n, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}